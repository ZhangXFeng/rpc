// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: Calculator.proto

package com.zxf.rpc.proto;

public final class Calculator {
	private Calculator() {
	}

	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistry registry) {
	}

	/**
	 * Protobuf service {@code CalculatorService}
	 */
	public static abstract class CalculatorService implements
			com.google.protobuf.Service {
		protected CalculatorService() {
		}

		public interface Interface {
			/**
			 * <code>rpc add(.CalRequest) returns (.CalResponse);</code>
			 */
			public abstract void add(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
					com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done);

			/**
			 * <code>rpc Subtraction(.CalRequest) returns (.CalResponse);</code>
			 */
			public abstract void subtraction(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
					com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done);

		}

		public static com.google.protobuf.Service newReflectiveService(
				final Interface impl) {
			return new CalculatorService() {
				@java.lang.Override
				public void add(
						com.google.protobuf.RpcController controller,
						com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
						com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done) {
					impl.add(controller, request, done);
				}

				@java.lang.Override
				public void subtraction(
						com.google.protobuf.RpcController controller,
						com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
						com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done) {
					impl.subtraction(controller, request, done);
				}

			};
		}

		public static com.google.protobuf.BlockingService newReflectiveBlockingService(
				final BlockingInterface impl) {
			return new com.google.protobuf.BlockingService() {
				public final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType() {
					return getDescriptor();
				}

				public final com.google.protobuf.Message callBlockingMethod(
						com.google.protobuf.Descriptors.MethodDescriptor method,
						com.google.protobuf.RpcController controller,
						com.google.protobuf.Message request)
						throws com.google.protobuf.ServiceException {
					if (method.getService() != getDescriptor()) {
						throw new java.lang.IllegalArgumentException(
								"Service.callBlockingMethod() given method descriptor for "
										+ "wrong service type.");
					}
					switch (method.getIndex()) {
					case 0:
						return impl
								.add(controller,
										(com.zxf.rpc.proto.CalculatorMsg.CalRequest) request);
					case 1:
						return impl
								.subtraction(
										controller,
										(com.zxf.rpc.proto.CalculatorMsg.CalRequest) request);
					default:
						throw new java.lang.AssertionError("Can't get here.");
					}
				}

				public final com.google.protobuf.Message getRequestPrototype(
						com.google.protobuf.Descriptors.MethodDescriptor method) {
					if (method.getService() != getDescriptor()) {
						throw new java.lang.IllegalArgumentException(
								"Service.getRequestPrototype() given method "
										+ "descriptor for wrong service type.");
					}
					switch (method.getIndex()) {
					case 0:
						return com.zxf.rpc.proto.CalculatorMsg.CalRequest
								.getDefaultInstance();
					case 1:
						return com.zxf.rpc.proto.CalculatorMsg.CalRequest
								.getDefaultInstance();
					default:
						throw new java.lang.AssertionError("Can't get here.");
					}
				}

				public final com.google.protobuf.Message getResponsePrototype(
						com.google.protobuf.Descriptors.MethodDescriptor method) {
					if (method.getService() != getDescriptor()) {
						throw new java.lang.IllegalArgumentException(
								"Service.getResponsePrototype() given method "
										+ "descriptor for wrong service type.");
					}
					switch (method.getIndex()) {
					case 0:
						return com.zxf.rpc.proto.CalculatorMsg.CalResponse
								.getDefaultInstance();
					case 1:
						return com.zxf.rpc.proto.CalculatorMsg.CalResponse
								.getDefaultInstance();
					default:
						throw new java.lang.AssertionError("Can't get here.");
					}
				}

			};
		}

		/**
		 * <code>rpc add(.CalRequest) returns (.CalResponse);</code>
		 */
		public abstract void add(
				com.google.protobuf.RpcController controller,
				com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
				com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done);

		/**
		 * <code>rpc Subtraction(.CalRequest) returns (.CalResponse);</code>
		 */
		public abstract void subtraction(
				com.google.protobuf.RpcController controller,
				com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
				com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done);

		public static final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptor() {
			return com.zxf.rpc.proto.Calculator.getDescriptor()
					.getServices().get(0);
		}

		public final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType() {
			return getDescriptor();
		}

		public final void callMethod(
				com.google.protobuf.Descriptors.MethodDescriptor method,
				com.google.protobuf.RpcController controller,
				com.google.protobuf.Message request,
				com.google.protobuf.RpcCallback<com.google.protobuf.Message> done) {
			if (method.getService() != getDescriptor()) {
				throw new java.lang.IllegalArgumentException(
						"Service.callMethod() given method descriptor for wrong "
								+ "service type.");
			}
			switch (method.getIndex()) {
			case 0:
				this.add(
						controller,
						(com.zxf.rpc.proto.CalculatorMsg.CalRequest) request,
						com.google.protobuf.RpcUtil
								.<com.zxf.rpc.proto.CalculatorMsg.CalResponse> specializeCallback(done));
				return;
			case 1:
				this.subtraction(
						controller,
						(com.zxf.rpc.proto.CalculatorMsg.CalRequest) request,
						com.google.protobuf.RpcUtil
								.<com.zxf.rpc.proto.CalculatorMsg.CalResponse> specializeCallback(done));
				return;
			default:
				throw new java.lang.AssertionError("Can't get here.");
			}
		}

		public final com.google.protobuf.Message getRequestPrototype(
				com.google.protobuf.Descriptors.MethodDescriptor method) {
			if (method.getService() != getDescriptor()) {
				throw new java.lang.IllegalArgumentException(
						"Service.getRequestPrototype() given method "
								+ "descriptor for wrong service type.");
			}
			switch (method.getIndex()) {
			case 0:
				return com.zxf.rpc.proto.CalculatorMsg.CalRequest
						.getDefaultInstance();
			case 1:
				return com.zxf.rpc.proto.CalculatorMsg.CalRequest
						.getDefaultInstance();
			default:
				throw new java.lang.AssertionError("Can't get here.");
			}
		}

		public final com.google.protobuf.Message getResponsePrototype(
				com.google.protobuf.Descriptors.MethodDescriptor method) {
			if (method.getService() != getDescriptor()) {
				throw new java.lang.IllegalArgumentException(
						"Service.getResponsePrototype() given method "
								+ "descriptor for wrong service type.");
			}
			switch (method.getIndex()) {
			case 0:
				return com.zxf.rpc.proto.CalculatorMsg.CalResponse
						.getDefaultInstance();
			case 1:
				return com.zxf.rpc.proto.CalculatorMsg.CalResponse
						.getDefaultInstance();
			default:
				throw new java.lang.AssertionError("Can't get here.");
			}
		}

		public static Stub newStub(com.google.protobuf.RpcChannel channel) {
			return new Stub(channel);
		}

		public static final class Stub extends
				com.zxf.rpc.proto.Calculator.CalculatorService implements
				Interface {
			private Stub(com.google.protobuf.RpcChannel channel) {
				this.channel = channel;
			}

			private final com.google.protobuf.RpcChannel channel;

			public com.google.protobuf.RpcChannel getChannel() {
				return channel;
			}

			public void add(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
					com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done) {
				channel.callMethod(
						getDescriptor().getMethods().get(0),
						controller,
						request,
						com.zxf.rpc.proto.CalculatorMsg.CalResponse
								.getDefaultInstance(),
						com.google.protobuf.RpcUtil
								.generalizeCallback(
										done,
										com.zxf.rpc.proto.CalculatorMsg.CalResponse.class,
										com.zxf.rpc.proto.CalculatorMsg.CalResponse
												.getDefaultInstance()));
			}

			public void subtraction(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request,
					com.google.protobuf.RpcCallback<com.zxf.rpc.proto.CalculatorMsg.CalResponse> done) {
				channel.callMethod(
						getDescriptor().getMethods().get(1),
						controller,
						request,
						com.zxf.rpc.proto.CalculatorMsg.CalResponse
								.getDefaultInstance(),
						com.google.protobuf.RpcUtil
								.generalizeCallback(
										done,
										com.zxf.rpc.proto.CalculatorMsg.CalResponse.class,
										com.zxf.rpc.proto.CalculatorMsg.CalResponse
												.getDefaultInstance()));
			}
		}

		public static BlockingInterface newBlockingStub(
				com.google.protobuf.BlockingRpcChannel channel) {
			return new BlockingStub(channel);
		}

		public interface BlockingInterface {
			public com.zxf.rpc.proto.CalculatorMsg.CalResponse add(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request)
					throws com.google.protobuf.ServiceException;

			public com.zxf.rpc.proto.CalculatorMsg.CalResponse subtraction(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request)
					throws com.google.protobuf.ServiceException;
		}

		private static final class BlockingStub implements BlockingInterface {
			private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
				this.channel = channel;
			}

			private final com.google.protobuf.BlockingRpcChannel channel;

			public com.zxf.rpc.proto.CalculatorMsg.CalResponse add(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request)
					throws com.google.protobuf.ServiceException {
				return (com.zxf.rpc.proto.CalculatorMsg.CalResponse) channel
						.callBlockingMethod(
								getDescriptor().getMethods().get(0),
								controller,
								request,
								com.zxf.rpc.proto.CalculatorMsg.CalResponse
										.getDefaultInstance());
			}

			public com.zxf.rpc.proto.CalculatorMsg.CalResponse subtraction(
					com.google.protobuf.RpcController controller,
					com.zxf.rpc.proto.CalculatorMsg.CalRequest request)
					throws com.google.protobuf.ServiceException {
				return (com.zxf.rpc.proto.CalculatorMsg.CalResponse) channel
						.callBlockingMethod(
								getDescriptor().getMethods().get(1),
								controller,
								request,
								com.zxf.rpc.proto.CalculatorMsg.CalResponse
										.getDefaultInstance());
			}

		}

		// @@protoc_insertion_point(class_scope:CalculatorService)
	}

	public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
		return descriptor;
	}

	private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
	static {
		java.lang.String[] descriptorData = { "\n\020Calculator.proto\032\023CalculatorMsg.proto2"
				+ "_\n\021CalculatorService\022 \n\003add\022\013.CalRequest"
				+ "\032\014.CalResponse\022(\n\013Subtraction\022\013.CalReque"
				+ "st\032\014.CalResponseB+\n\027com.newegg.ec.rpc.pr"
				+ "otoB\nCalculator\210\001\001\240\001\001" };
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
			public com.google.protobuf.ExtensionRegistry assignDescriptors(
					com.google.protobuf.Descriptors.FileDescriptor root) {
				descriptor = root;
				return null;
			}
		};
		com.google.protobuf.Descriptors.FileDescriptor
				.internalBuildGeneratedFileFrom(
						descriptorData,
						new com.google.protobuf.Descriptors.FileDescriptor[] { com.zxf.rpc.proto.CalculatorMsg
								.getDescriptor(), }, assigner);
	}

	// @@protoc_insertion_point(outer_class_scope)
}